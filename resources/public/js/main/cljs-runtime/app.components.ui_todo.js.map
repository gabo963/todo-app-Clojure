{"version":3,"sources":["app/components/ui_todo.cljs"],"mappings":"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","names":["app.components.ui-todo/ui-todo-checkbox","this","id","done","com.fulcrologic.fulcro.dom.macro_create_element","com.fulcrologic.fulcro.components.transact_BANG_","G__69968","app.model.todo/todo-change-done","cljs.core/not","com.fulcrologic.fulcro.dom/macro-create-element*","app.components.ui-todo/ui-todo-input","text","p1__69969#","G__69970","app.model.todo/todo-change-text","com.fulcrologic.fulcro.dom.events/target-value","app.components.ui-todo/ui-todo-delete-button","onDelete","options__63143__auto__","p__69971","map__69972","cljs.core/--destructure-map","cljs.core.get","com.fulcrologic.fulcro.components/wrapped-render","map__69973","com.fulcrologic.fulcro.components/props","map__69974","com.fulcrologic.fulcro.components/get-computed","js/app","js/app.components","js/app.components.ui-todo","js/app.components.ui-todo.Todo","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.components.ui-todo/Todo","props","app.components.ui-todo/ui-todo","com.fulcrologic.fulcro.components.factory"],"sourcesContent":["(ns app.components.ui-todo\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    [app.model.todo :as api]))\n\n(defn- ui-todo-checkbox [this id done]\n  (div\n    (input {:type     \"checkbox\" :name id :checked done\n            :onChange #(comp/transact! this\n                         [(api/todo-change-done {:todo/id id :todo/done (not done)})])}\n      )\n    (label \"\")))\n\n(defn- ui-todo-input [this id text done]\n  (if done\n    (div :.ui.disabled.input\n      (input :.w-full {:type \"text\" :value text :style {:text-decoration \"line-through\"}}))\n    (div :.ui.input\n      (input :.w-full {:type     \"text\" :value text :placeholder \"Write Something\"\n                       :onChange #(comp/transact! this\n                                    [(api/todo-change-text {:todo/id id :todo/text (evt/target-value %)})])}))))\n(defn- ui-todo-delete-button [onDelete id]\n  (div :.fluid\n    (button :.ui.icon.button {\n                              :onClick #(onDelete id)} \"\"\n      (i :.x.icon))))\n\n(defsc Todo [this {:todo/keys [id done text] :as props} {:keys [onDelete]}]\n  {:query         [:todo/id :todo/done :todo/text]\n   :ident         (fn [] [:todo/id (:todo/id props)])}\n  (div :.ui.grid\n    (div :.column\n      (ui-todo-checkbox this id done))\n    (div :.ten.wide.column\n      (ui-todo-input this id text done))\n    (div :.two.wide.column\n      (ui-todo-delete-button onDelete id))\n    ))\n\n(def ui-todo (comp/factory Todo {:keyfn :todo/id}))\n"]}