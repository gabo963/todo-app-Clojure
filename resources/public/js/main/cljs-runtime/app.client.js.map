{"version":3,"sources":["app/client.cljs"],"mappings":";AASA,AAAA,AAAA;AAAA,IAAAA,+BAAA,2CAAA,wDAAA,iCAAac;AAAb,AAAA,0FAAA,2CAAA,2DAC+B,AAACE,0EAAeC;GAD/C,wEAAA,+CAAAhB;AAAA,AAAA,OAAAC,iDAAA,2CAAA,2DAAA,2CAAA,2CAAA,gGAAAD,rCAC+CgB;GAD/C,0DAAA,iCAAaH;AAAb,AAAA,OAAAX,uDAAA,NAAaW;AAAb,AAAA,IAAAV,aAAA,CAAAC,wEAAAA,+EAAAA,TAAaS,2DAAAA;IAAbV,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEAA+BW;AAA/B,AAGE,OAAAG,sDAAA,CAAA,MAAA,eAAA,eAAA,AAAAC,iIAAA,AAAAA,hFACE,AAAAD,sDAAA,CAAA,KAAA,KAAA,gEACA,kBAAIH,MACF,CAACK,+DAAAA,qEAAAA,RAA0BL,iDAAAA,OAC3B,AAAAG,sDAAA,CAAA,KAAA,KAAA;;;AAPN,AAAA,GAAA,QAAAV,gCAAAC,uCAAAC;AAAA;AAAA,AAAA;;;kBAAA,AAAAC,oDAAA,AAAAJ,4CAAAP,6BAAA,/IAAOa;;;AAAP,AAAAD,4EAAA,wEAAAZ,xFAAOa;AASP,GAAA,QAAAL,gCAAAC,uCAAAY;AAAA;AAAA,AAAA,AAASC,iBAAI,4EAAA,2CAAA,2DAAA,2CAAA,uKAAA,pYAACC,uRAA2C,iEAAA,jEAACC,0LACV,WAAKC;AAAL,AACE,0FAAA,mFAAA,yDAAA,2GAAA,2CAAA,wDAAA,mFAAA,hgBAACC,2EAASD,kOAA2DR;;;AAGvH,kBAAA,lBAAeU;AAAf,AACE,mHAAA,5GAACC,6EAAWN,eAAIT","names":["options__52180__auto__","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__59092","com.fulcrologic.fulcro.components/props","cljs.core/--destructure-map","cljs.core.get","js/app","js/app.client","js/app.client.Root","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.client/Root","this","list","com.fulcrologic.fulcro.components.get_query","app.components.ui-list/Lista","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","app.components.ui-list/ui-list","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app","com.fulcrologic.fulcro.networking.http-remote/fulcro-http-remote","app","com.fulcrologic.fulcro.data_fetch.load_BANG_","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.fulcrologic.fulcro.dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [com.fulcrologic.fulcro.networking.http-remote :as http]\n    [app.components.ui-list :as ui-list-component]))\n\n(defsc Root [this {:root/keys [list]}]\n  {:query         [{:root/list (comp/get-query ui-list-component/Lista)}]\n   :initial-state {:root/list {}}}\n  (div :.ui.segment {}\n    (h1 \"Todo List\")\n    (if list\n      (ui-list-component/ui-list list)\n      (h1 \"Loading...\"))))\n\n(defonce APP (app/fulcro-app {:remotes          {:remote (http/fulcro-http-remote {})}\n                              :client-did-mount (fn [app]\n                                                  (df/load! app [:list/id #uuid\"1bd2ab8b-73d2-4c6f-9966-0671b16a372e\"] ui-list-component/Lista\n                                                    {:target [:root/list]}))}))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n"]}