{"version":3,"sources":["app/client.cljs"],"mappings":";;;;;;AAOA,AAAA,AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAagB;AAAb,AAAA,AAAA,AAAA,AACgC,AAACE,AAAeC;AADhD,AAAA,AAAAlB;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AACgDkB;AADhD,AAAA,AAAaH;AAAb,AAAA,AAAAb,AAAA,AAAaa;AAAb,AAAA,AAAAZ,AAAA,AAAAC,AAAAA,AAAAA,AAAaW,AAAAA;AAAbZ,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAA+Ba;AAA/B,AAGE,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAA,AACE,AAAAD,AAAA,AAAA,AAAA,AAAA,AACA,AAAIH,AACF,AAACK,AAAAA,AAAAA,AAA4BL,AAAAA,AAC7B,AAAAG,AAAA,AAAA,AAAA,AAAA;;;AAPN,AAAA,AAAA,AAAAV,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAT,AAAA,AAAOe;;;AAAP,AAAAD,AAAA,AAAAd,AAAOe;AASP,AAAA,AAAAL,AAAAC,AAAAY;AAAA;AAAA,AAAA,AAASC,AAAI,AAACC;;AAEd,AAAA,AAAeC;AAAf,AACE,AAAA,AAACC,AAAWH,AAAIT","names":["options__46503__auto__","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__50321","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/app","js/app.client","js/app.client.Root","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.client/Root","this","lista","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","app.ui-lista/Lista","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","app.ui-lista/ui-lista","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app.cljs$core$IFn$_invoke$arity$0","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [app.ui-lista :as ui-lista-component]))\n\n(defsc Root [this {:root/keys [lista]}]\n  {:query         [{:root/lista (comp/get-query ui-lista-component/Lista)}]\n   :initial-state {:root/lista {:id 1 :name \"Gabriel\"}}}\n  (div :.ui.segment {}\n    (h1 \"Todo List\")\n    (if lista\n      (ui-lista-component/ui-lista lista)\n      (h1 \"Loading...\"))))\n\n(defonce APP (app/fulcro-app))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n"]}