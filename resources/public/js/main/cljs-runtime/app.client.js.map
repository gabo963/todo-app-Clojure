{"version":3,"sources":["app/client.cljs"],"mappings":";;;;;;;;;;AAWA,AAAA;;;AAAAA,AAAA,AAAAC,AAAA,AAAA;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA4CgB;AAA5C,AAAAZ,AAAAJ,AAAA,AAA+CiB;AAA/C,AAAA,AAAA,AAAA;AAAAZ;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAL,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAC,AAAAG,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AACmBY;AADnB,AAAA,AAAAX,AAAAC;AAAAC,AAAA;AAAA,AAAA,AAAAD,AAAAC;;AAAA,AAAA,AAEI,AAAA,AAAA,AAAA,AAACU,AAAMD,AAAME,AAAmBJ,AAAeC;AAFnD,AAAA,AAAAT,AAAAD;;AAAA;;AAAA,AAAA;AAAAG;AAAA,AAAA,AAAAC,AAAAH;AAAAI,AAAA;AAAA,AAAA,AAAAJ,AAAAI;;AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAAJ,AAAA;AAAA,AAAA,AAAAG;AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAAA,AAAAL,AAAAK,AAAAL;;AAAA;;AAAA,AAAA,AAAAF,AAAAG;;;;AAMA,AAAA;;;AAAAU,AAAA,AAAAxB,AAAA,AAAA;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAuB,AAAA,AAAA,AAAA,AAAA,AAAAvB;AAAAuB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAC,AAAAmB,AAAAA;AAAA,AAAAlB,AAAAkB,AAAA,AAA4CN;AAA5C,AAAAZ,AAAAkB,AAAA,AAA+CO;AAA/C,AAAA,AAAA,AAAA;AAAAN;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAvB,AAAA,AAAAuB,AAAA,AAAA,AAAA,AAAA,AAAAtB,AAAAC,AAAAqB,AAAAA;AAAA,AAAApB,AAAAoB,AAAA,AACmBN;AADnB,AAAA,AAAAO,AAAAjB;AAAAkB,AAAA;AAAA,AAAA,AAAAlB,AAAAkB;;AAAA,AAAA,AAEI,AAAA,AAAA,AAAA,AAACP,AAAMD,AAAME,AAAmBJ,AAAea;AAFnD,AAAA,AAAArB,AAAAiB;;AAAA;;AAAA,AAAA;AAAAf;AAAA,AAAA,AAAAiB,AAAAnB;AAAAoB,AAAA;AAAA,AAAA,AAAApB,AAAAoB;;AAAA,AAAA,AAAA,AAAAf,AAAA,AAAAC,AAAA,AAAA,AAAAJ,AAAA;AAAA,AAAA,AAAAG;AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAAA,AAAAL,AAAAK,AAAAL;;AAAA;;AAAA,AAAA,AAAAF,AAAAmB;;;;AAMA,AAAA,AAAA;AAAA,AAAAG,AAAA,AAAA,AAAA,AAAagB;AAAb,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAf,AAAae;AAAb,AAAA,AAAAd,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA/B,AAAA,AAAA+B,AAAA,AAAA,AAAA,AAAA,AAAA9B,AAAAC,AAAA6B,AAAAA;AAAAA,AAAiDe;AAAjD,AAAA3C,AAAA4B,AAAA,AAA+BhB;AAA/B,AAAAZ,AAAA4B,AAAA,AAAkCH;AAAlC,AAAAzB,AAAA4B,AAAA,AAAuCf;AAAvC,AAAA,AAAA,AAEmC,AAAA,AAAU8B;AAF7C,AAAA,AAAAd;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD;AAAA,AAAA,AAAaa;AAAb,AAAA,AAAAX,AAAA,AAAaW;AAAb,AAAA,AAAAV,AAAA,AAAAC,AAAAA,AAAAA,AAAaS,AAAAA;AAAbV,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnC,AAAA,AAAAmC,AAAA,AAAA,AAAA,AAAA,AAAAlC,AAAAC,AAAAiC,AAAAA;AAAAA,AAAiDW;AAAjD,AAAA3C,AAAAgC,AAAA,AAA+BpB;AAA/B,AAAAZ,AAAAgC,AAAA,AAAkCP;AAAlC,AAAAzB,AAAAgC,AAAA,AAAuCnB;AAAvCqB,AAAA,AAAAC,AAAAA,AAAAA,AAAaO,AAAAA;AAAbR,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArC,AAAA,AAAAqC,AAAA,AAAA,AAAA,AAAA,AAAApC,AAAAC,AAAAmC,AAAAA;AAAA,AAAAlC,AAAAkC,AAAA,AAAgEU;AAAhE,AAME,AAAAC,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAmCjC,AAAYa;;AAA/C,AACmB,AAAA,AAACqB,AAAeJ,AAC1B,AAAAK,AAAA,AAAA,AAAA,AAA4BnC,AAAc,AAACoC,AAAIvB;AAA/C,AAAA,AAAAsB,AAAAA,AAAC9B,AAAAA,AAAAA;;;AAHZ,AACE,AAIA,AAAAgC,AAAA,AAAA,AAAA,AAAA,AAEF,AAAIxB,AACF,AAAAoB,AAAA,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAqChC,AACvC,AAAAgC,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAyChC;AAAzCqC;AAAA,AAC4B,AAAA,AAACJ,AAAeJ,AAC1B,AAAAS,AAAA,AAAA,AAAA,AAA4BvC,AAAc,AAAAsC,AAACE;AAA3C,AAAA,AAAAD,AAAAA,AAAC3D,AAAAA,AAAAA;;;AAHrB,AACE,AAKJ,AAAAqD,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAAA,AACoC,AAACD,AAAAA,AAAAA,AAAShC,AAAAA;;AAnBlD,AAiBE,AACE,AAAA,AAEE,AAAAqC,AAAA,AAAA,AAAA,AAAA;;;AA1BR,AAAA,AAAA,AAAAb,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAA,AAAAvC,AAAA0B,AAAA,AAAOe;;;AAAP,AAAAD,AAAA,AAAAd,AAAOe;AA+BP,AAAKY,AAAQ,AAAA,AAAA,AAAA,AAACC,AAAab;AAE3B,AAAA;;;AAAAc,AAAA,AAAA9D,AAAA,AAAA;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA6D,AAAA,AAAA,AAAA,AAAA,AAAA7D;AAAA6D,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA3D,AAAA,AAAA2D,AAAA,AAAA,AAAA,AAAA,AAAA1D,AAAAC,AAAAyD,AAAAA;AAAA,AAAAxD,AAAAwD,AAAA,AAA2BO;AAA3B,AAAA/D,AAAAwD,AAAA,AAA8CQ;AAA9C,AAAA,AAAA,AAAA;AAAAP;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA7D,AAAA,AAAA6D,AAAA,AAAA,AAAA,AAAA,AAAA5D,AAAAC,AAAA2D,AAAAA;AAAA,AAAA1D,AAAA0D,AAAA,AACmB5C;AADnB,AAAA,AAAA6C,AAAAvD;AAAAwD,AAAA;AAAA,AAAA,AAAAxD,AAAAwD;;AAAA,AAAA,AAEI,AAAAK,AAAA,AAAanD;AAAboD;AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAA8BH,AAAoBD,AACnD,AAAA,AAAA,AAACK,AAAwBJ;;;AAJ/B,AAAA,AAAA5D,AAAAuD;;AAAA;;AAAA,AAAA;AAAArD;AAAA,AAAA,AAAAuD,AAAAzD;AAAA0D,AAAA;AAAA,AAAA,AAAA1D,AAAA0D;;AAAA,AAAA,AAAA,AAAArD,AAAA,AAAAC,AAAA,AAAA,AAAAJ,AAAA;AAAA,AAAA,AAAAG;AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAE,AAAAA,AAAAL,AAAAK,AAAAL;;AAAA;;AAAA,AAAA,AAAAF,AAAAyD;;;;AASA,AAAA,AAAA;AAAA,AAAAnC,AAAA,AAAA,AAAA,AAAcgB;AAAd,AAAA,AAAA,AAAA,AAAA,AAAA,AACuD,AAACkC,AAAenC;AADvE,AAAA,AAAA4B,AAAc3B;AAAd,AAAA,AAAA4B,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAzE,AAAA,AAAAyE,AAAA,AAAA,AAAA,AAAA,AAAAxE,AAAAC,AAAAuE,AAAAA;AAAAA,AAAoD3B;AAApD,AAAA3C,AAAAsE,AAAA,AAAiC1D;AAAjC,AAAAZ,AAAAsE,AAAA,AAAoCI;AAApC,AAAA1E,AAAAsE,AAAA,AAAyCK;AAAzC,AAAA,AAAA,AAEoC,AAAA,AAAWhC;AAF/C,AAAA,AAAAd;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AACuEY;AADvE,AAAA,AAAcC;AAAd,AAAA,AAAAX,AAAA,AAAcW;AAAd,AAAA,AAAA6B,AAAA,AAAAtC,AAAAA,AAAAA,AAAcS,AAAAA;AAAd6B,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1E,AAAA,AAAA0E,AAAA,AAAA,AAAA,AAAA,AAAAzE,AAAAC,AAAAwE,AAAAA;AAAAA,AAAoD5B;AAApD,AAAA3C,AAAAuE,AAAA,AAAiC3D;AAAjC,AAAAZ,AAAAuE,AAAA,AAAoCG;AAApC,AAAA1E,AAAAuE,AAAA,AAAyCI;AAAzC,AAQE,AAAME,AAAY;AAAKb;AAAL,AAAc,AAAA,AAAClB,AAAeJ,AAAM,AAAAoC,AAAA,AAAA,AAAA,AAAwBlE,AAAYoD;AAApC,AAAA,AAAAc,AAAAA,AAACvB,AAAAA,AAAAA;;;;AAAvD,AACE,AAAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA8B,AAAA,AAAAA,AAAA,AAAAA,AACE,AAAAlC,AAAA,AAAA,AAAA,AAAA,AAAI6B,AACJ,AAAAzB,AAAA,AAAA,AAAA,AAAA,AACA,AAAAJ,AAAA,AAAA,AAAI,AAAA,AAACoC;AAADD;AAAA,AAAM,AAAAE,AAAS,AAAAC,AAAAH;AAAAI,AAAA,AAAA,AAA4BP;AAA5B,AAAA,AAAAM,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAAV,AAAA,AAAAH,AAAAA,AAAC7B,AAAAA,AAAAA;;AAHb,AAAA0B,AAGE,AAA8DJ,AAC9D,AAAA1B,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAbN,AAAA,AAAA,AAAAb,AAAAC,AAAAmC;AAAA;AAAA,AAAA;;;AAAA,AAAAjC,AAAA,AAAAvC,AAAA0B,AAAA,AAAO+C;;;AAAP,AAAAjC,AAAA,AAAAd,AAAO+C;AAiBP,AAAKa,AAAS,AAAA,AAAA,AAAA,AAAChC,AAAamB;AAE5B,AAAA,AAAA;AAAA,AAAA/C,AAAA,AAAA,AAAA,AAAagB;AAAb,AAAA,AAAA,AAAA,AACgC,AAACkC,AAAeH;AADhD,AAAA,AAAA5C;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AACgD4C;AADhD,AAAA,AAAa/B;AAAb,AAAA,AAAAX,AAAA,AAAaW;AAAb,AAAA,AAAA6C,AAAA,AAAAtD,AAAAA,AAAAA,AAAaS,AAAAA;AAAb6C,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1F,AAAA,AAAA0F,AAAA,AAAA,AAAA,AAAA,AAAAzF,AAAAC,AAAAwF,AAAAA;AAAA,AAAAvF,AAAAuF,AAAA,AAA+BG;AAA/B,AAGE,AAAAzC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA8B,AAAA,AAAAA,AACE,AAAA9B,AAAA,AAAA,AAAA,AAAA,AACA,AAAIyC,AACF,AAAA7C,AAAA,AAAA,AAAA,AACE,AAACyC,AAAAA,AAAAA,AAASI,AAAAA,AACZ,AAAAzC,AAAA,AAAA,AAAA,AAAA;;;AARN,AAAA,AAAA,AAAAb,AAAAC,AAAAmD;AAAA;AAAA,AAAA;;;AAAA,AAAAjD,AAAA,AAAAvC,AAAA0B,AAAA,AAAO+D;;;AAAP,AAAAjD,AAAA,AAAAd,AAAO+D;AAUP,AAAA,AAAArD,AAAAC,AAAAsD;AAAA;AAAA,AAAA,AAASC,AAAI,AAACC;;AAEd,AAAA,AAAeC;AAAf,AACE,AAAA,AAACC,AAAWH,AAAIH;;;AAElB","names":["app.client/todo-change-text","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__50149","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p__50151","map__50152","*after-render*-orig-val__50154","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__50155","env","*after-render*-orig-val__50156","*after-render*-temp-val__50157","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","id","text","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","app.client/todo-change-done","map__50158","p__50160","map__50161","*after-render*-orig-val__50163","*after-render*-temp-val__50164","*after-render*-orig-val__50165","*after-render*-temp-val__50166","done","options__46640__auto__","p__50168","map__50169","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__50171","com.fulcrologic.fulcro.components/props","map__50172","com.fulcrologic.fulcro.components/get-computed","js/app","js/app.client","js/app.client.Todo","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.client/Todo","this","props","onDelete","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","G__50175","cljs.core/not","com.fulcrologic.fulcro.dom/macro-create-element*","p1__50167#","G__50176","com.fulcrologic.fulcro.dom.events/target-value","app.client/ui-todo","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","app.client/todo-delete","map__50177","p__50179","map__50180","*after-render*-orig-val__50182","*after-render*-temp-val__50183","*after-render*-orig-val__50184","*after-render*-temp-val__50185","lista-id","todo-id","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","s__46761__auto__","com.fulcrologic.fulcro.algorithms.merge/remove-ident*","com.fulcrologic.fulcro.algorithms.normalized-state/dissoc-in","p__50187","map__50188","map__50190","js/app.client.Lista","app.client/Lista","name","todos","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","delete-todo","G__50192","com.fulcrologic.fulcro.components/force-children","p1__50186#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","G__50193","G__50194","G__50195","com.fulcrologic.fulcro.components/computed","app.client/ui-lista","map__50196","js/app.client.Root","app.client/Root","lista","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app.cljs$core$IFn$_invoke$arity$0","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.algorithms.normalized-state :as fns]\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.data-targeting :as targeting]))\n\n(defmutation todo-change-text [{:todo/keys [id text]}]\n  (action [{:keys [state]}]\n    (swap! state assoc-in [:todo/id id :todo/text] text)\n    )\n  )\n\n(defmutation todo-change-done [{:todo/keys [id done]}]\n  (action [{:keys [state]}]\n    (swap! state assoc-in [:todo/id id :todo/done] done)\n    )\n  )\n\n(defsc Todo [this {:todo/keys [id done text] :as props} {:keys [onDelete]}]\n  {:query         [:todo/id :todo/done :todo/text]\n   :ident         (fn [] [:todo/id (:todo/id props)])\n   :initial-state {:todo/id   :param/id\n                   :todo/done false\n                   :todo/text \"\"}}\n  (div :.ui.grid\n    (div :.column\n      (input {:type     \"checkbox\" :name id :checked done\n              :onChange #(comp/transact! this\n              [(todo-change-done {:todo/id id :todo/done (not done)})])}\n        )\n      (label \"\")\n      )\n    (if done\n      (div :.ui.disabled.input.ten.wide.column\n        (input :.w-full {:type \"text\" :value text :style {:text-decoration \"line-through\"}}))\n      (div :.ui.input.ten.wide.column\n        (input :.w-full {:type     \"text\" :value text :placeholder \"Write Something\"\n                         :onChange #(comp/transact! this\n                         [(todo-change-text {:todo/id id :todo/text (evt/target-value %)})])})\n        )\n      )\n    (div :.two.wide.column.fluid\n      (button :.ui.icon.button {\n                                :onClick #(onDelete id)} \"\"\n        (i :.x.icon)\n        )\n      )\n    ))\n\n(def ui-todo (comp/factory Todo {:keyfn :todo/id}))\n\n(defmutation todo-delete [{lista-id :lista/id todo-id :todo/id}]\n  (action [{:keys [state]}]\n    (fns/swap!-> state\n      (merge/remove-ident* [:todo/id todo-id] [:lista/id lista-id :lista/todos])\n      (fns/dissoc-in [:todo/id todo-id])\n      )\n    )\n  )\n\n(defsc Lista [this {:lista/keys [id name todos] :as props}]\n  {:query         [:lista/id :lista/name {:lista/todos (comp/get-query Todo)}]\n   :ident         (fn [] [:lista/id (:lista/id props)])\n   :initial-state {:lista/id    :param/id\n                   :lista/name  :param/name\n                   :lista/todos [{:id 1}\n                                 {:id 2}\n                                 {:id 3}]}}\n  (let [delete-todo (fn [todo-id] (comp/transact! this [(todo-delete {:lista/id id :todo/id todo-id})]))]\n    (div :.ui.segment {}\n      (h2 name \"'s Todos\")\n      (h2 \"Todos:\")\n      (ul (map #(ui-todo (comp/computed % {:onDelete delete-todo})) todos))\n      (button :.ui.button {} \"Add item\")\n      ))\n  )\n\n(def ui-lista (comp/factory Lista {:keyfn :lista/id}))\n\n(defsc Root [this {:root/keys [lista]}]\n  {:query         [{:root/lista (comp/get-query Lista)}]\n   :initial-state {:root/lista {:id 1 :name \"Gabriel\"}}}\n  (div :.ui.segment {}\n    (h1 \"Todo List\")\n    (if lista\n      (div\n        (ui-lista lista))\n      (h3 \"Loading...\"))))\n\n(defonce APP (app/fulcro-app))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n\n(comment\n\n  (comp/get-query PersonList)\n  (comp/get-initial-state Root)\n  (reset! (::app/state-atom APP) {})\n\n  (app/current-state APP)\n\n  (app/schedule-render! APP)\n\n  )\n\n\n"]}