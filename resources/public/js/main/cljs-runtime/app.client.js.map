{"version":3,"sources":["app/client.cljs"],"mappings":"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","names":["app.client/todo-text-changed","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__50295","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p__50297","map__50298","*after-render*-orig-val__50300","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__50301","env","*after-render*-orig-val__50302","*after-render*-temp-val__50303","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","id","text","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","app.client/todo-done-changed","map__50304","p__50306","map__50307","*after-render*-orig-val__50309","*after-render*-temp-val__50310","*after-render*-orig-val__50311","*after-render*-temp-val__50312","done","app.client/todo-deleted","map__50313","p__50315","map__50316","*after-render*-orig-val__50318","*after-render*-temp-val__50319","*after-render*-orig-val__50320","*after-render*-temp-val__50321","cljs.core/dissoc","options__46506__auto__","_","props","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__50323","com.fulcrologic.fulcro.components/props","js/app","js/app.client","js/app.client.Todo","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.client/Todo","this","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","G__50325","cljs.core/not","com.fulcrologic.fulcro.dom/macro-create-element*","p1__50322#","G__50326","com.fulcrologic.fulcro.dom.events/target-value","com.fulcrologic.fulcro.components/force-children","app.client/ui-todo","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","app.client/make-older","map__50327","p__50329","map__50330","*after-render*-orig-val__50332","*after-render*-temp-val__50333","*after-render*-orig-val__50334","*after-render*-temp-val__50335","cljs.core/update-in","cljs.core/inc","map__50336","js/app.client.Person","app.client/Person","name","age","todos","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$3","G__50338","cljs.core.map.cljs$core$IFn$_invoke$arity$2","app.client/ui-person","p__50339","map__50340","map__50342","js/app.client.PersonList","app.client/PersonList","people","cnt","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__50344","map__50345","c","app.client/ui-person-list","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","map__50347","js/app.client.Root","app.client/Root","list","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app.cljs$core$IFn$_invoke$arity$0","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.data-targeting :as targeting]))\n\n(defmutation todo-text-changed [{:todo/keys [id text]}]\n  (action [{:keys [state]}]\n    (swap! state assoc-in [:todo/id id :todo/text] text)\n  )\n)\n\n(defmutation todo-done-changed [{:todo/keys [id done]}]\n  (action [{:keys [state]}]\n    (swap! state assoc-in [:todo/id id :todo/done] done)\n  )\n)\n\n(defmutation todo-deleted [{:todo/keys [id]}]\n  (action [{:keys [state]}]\n    (swap! state dissoc [:todo/id] id)\n  )\n)\n\n(defsc Todo [this {:todo/keys [id done text] :as props}]\n  {:query [:todo/id :todo/done :todo/text]\n   :ident :todo/id\n   :initial-state {:todo/id :param/id\n                   :todo/done false\n                   :todo/text \"\"}}\n  (div :.ui.grid\n    (div :.column\n      (input {:type \"checkbox\" :name id :checked done\n      :onChange #(comp/transact! this [(todo-done-changed {:todo/id id :todo/done (not done)})])}\n      )\n      (label \"\")\n    )\n    (if done\n      (div :.ui.disabled.input.ten.wide.column\n        (input :.w-full {:type \"text\" :value text :style {:text-decoration \"line-through\"}})\n        )\n      (div :.ui.input.ten.wide.column\n        (input :.w-full {:type \"text\" :value text :placeholder \"Write Something\"\n        :onChange #(comp/transact! this [(todo-text-changed {:todo/id id :todo/text (evt/target-value %)})])})\n        )\n      )\n    (div :.two.wide.column.fluid\n      (button :.ui.icon.button {} \"\"\n        (i :.x.icon)\n        )\n      )\n    ))\n\n(def ui-todo (comp/factory Todo {:keyfn :todo/id}))\n\n(defmutation make-older [{:person/keys [id]}]\n  (action [{:keys [state]}]\n    (swap! state update-in [:person/id id :person/age] inc)))\n\n(defsc Person [this {:person/keys [id name age todos] :as props}]\n  {:query [:person/id :person/name :person/age {:person/todos (comp/get-query Todo)}]\n   :ident :person/id\n   :initial-state {:person/id :param/id\n                   :person/name :param/name\n                   :person/age 0\n                   :person/todos [{:id 1}\n                                 {:id 2 }\n                                 {:id 3}]}}\n  (div :.ui.segment {}\n    (h2 \"Name: \" name)\n    (h2 \"Age: \" age)\n    (button :.ui.button {:onClick\n      #(comp/transact! this [(make-older {:person/id id})] {:refresh [:person-list/people]})} \"Make Older\")\n    (h2 \"id: \" id)\n    (h2 \"Todos:\")\n    (ul (map ui-todo todos)))\n  )\n\n(def ui-person (comp/factory Person {:keyfn :person/id}))\n\n(defsc PersonList [this { :person-list/keys [people]}]\n  {:query [{:person-list/people (comp/get-query Person)}]\n   :ident (fn [] [:component/id ::person-list])\n   :initial-state {:person-list/people [{:id 1 :name \"Daniel\"}]}}\n  (div\n    (let [cnt (reduce (fn [c {:person/keys [age]}]\n                        (if (> age 30) (inc c) c)) 0 people)]\n    (h2 \"People Over 30: \" cnt))\n    (ul (map ui-person people))\n  ))\n\n(def ui-person-list (comp/factory PersonList))\n\n(defsc Root [this {:root/keys [list]}]\n  {:query [{:root/list (comp/get-query PersonList)}]\n   :initial-state {:root/list {}}}\n  (div :.ui.segment{}\n    (if list\n      (div (h1 \"People\")\n           (ui-person-list list))\n      (h3 \"Loading...\"))))\n\n(defonce APP (app/fulcro-app))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n\n(comment\n\n  (comp/get-query PersonList)\n  (comp/get-initial-state Sample)\n  (reset! (::app/state-atom APP) {})\n\n  (app/current-state APP)\n\n  (app/schedule-render! APP)\n\n\n  )\n\n\n"]}