{"version":3,"sources":["app/client.cljs"],"mappings":"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","names":["options__59317__auto__","_","props","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__69635","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/app","js/app.client","js/app.client.Todo","props__59318__auto__","this__59319__auto__","temp__5802__auto__","init-state__59320__auto__","obj69638","G__69639","G__69640","goog.object/get","obj69642","com.fulcrologic.fulcro.components/configure-component!","app.client/Todo","this","id","done","text","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.dom/macro-create-element*","app.client/ui-todo","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__69643","js/app.client.Car","obj69646","G__69647","G__69648","obj69650","app.client/Car","model","app.client/ui-car","app.client/make-older","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__69651","p__69653","map__69654","env","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/update-in","cljs.core/inc","map__69656","js/app.client.Person","obj69660","G__69661","G__69662","obj69664","app.client/Person","name","age","todos","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$3","G__69658","cljs.core.map.cljs$core$IFn$_invoke$arity$2","app.client/ui-person","p__69665","map__69666","map__69668","js/app.client.PersonList","obj69674","G__69675","G__69676","obj69678","app.client/PersonList","people","cnt","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__69670","map__69671","c","app.client/ui-person-list","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","map__69679","js/app.client.Root","obj69682","G__69683","G__69684","obj69686","app.client/Root","list","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app.cljs$core$IFn$_invoke$arity$0","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button input label i]]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.data-targeting :as targeting]))\n\n(defsc Todo [this {:todo/keys [id done text] :as props}]\n  {:query [:todo/id :todo/done :todo/text]\n   :ident :todo/id\n   :initial-state {:todo/id :param/id\n                   :todo/done false\n                   :todo/text \"Write Something\"}}\n  (div :.ui.grid\n    (div :.column\n      (if done\n        (input {:type \"checkbox\" :name id :checked \"\"})\n        (input {:type \"checkbox\" :name id })\n      )\n      (label \"\")\n    )\n    (div :.ten.wide.column\n      (input :.w-full {:type \"text\" :placeholder text})\n    )\n    (div :.two.wide.column.fluid\n      (button :.ui.icon.button.fluid {} \"\"\n        (i :.x.icon)\n      )\n    )\n\n  ))\n\n(def ui-todo (comp/factory Todo {:keyfn :todo/id}))\n\n(defsc Car [this {:car/keys [id model] :as props}]\n  {:query [:car/id :car/model]\n   :ident :car/id\n   :initial-state {:car/id :param/id\n                   :car/model :param/model}}\n  (div (h4 model)))\n\n(def ui-car (comp/factory Car {:keyfn :car/id}))\n\n(defmutation make-older [{:person/keys [id]}]\n  (action [{:keys [state]}]\n    (swap! state update-in [:person/id id :person/age] inc)))\n\n(defsc Person [this {:person/keys [id name age todos] :as props}]\n  {:query [:person/id :person/name :person/age {:person/todos (comp/get-query Todo)}]\n   :ident :person/id\n   :initial-state {:person/id :param/id\n                   :person/name :param/name\n                   :person/age 0\n                   :person/todos [{:id 1}\n                                 {:id 2 }\n                                 {:id 3}]}}\n  (div :.ui.segment {}\n    (h2 \"Name: \" name)\n    (h2 \"Age: \" age)\n    (button :.ui.button {:onClick\n      #(comp/transact! this [(make-older {:person/id id})] {:refresh [:person-list/people]})} \"Make Older\")\n    (h2 \"id: \" id)\n    (h2 \"Todos:\")\n    (ul (map ui-todo todos)))\n  )\n\n(def ui-person (comp/factory Person {:keyfn :person/id}))\n\n(defsc PersonList [this { :person-list/keys [people]}]\n  {:query [{:person-list/people (comp/get-query Person)}]\n   :ident (fn [] [:component/id ::person-list])\n   :initial-state {:person-list/people [{:id 1 :name \"Daniel\"} {:id 2 :name \"Nicolas\"}]}}\n  (div\n    (let [cnt (reduce (fn [c {:person/keys [age]}]\n                        (if (> age 30) (inc c) c)) 0 people)]\n    (h2 \"People Over 30: \" cnt))\n    (ul (map ui-person people))\n  ))\n\n(def ui-person-list (comp/factory PersonList))\n\n(defsc Root [this {:root/keys [list]}]\n  {:query [{:root/list (comp/get-query PersonList)}]\n   :initial-state {:root/list {}}}\n  (div :.ui.segment{}\n    (if list\n      (div (h1 \"People\")\n           (ui-person-list list))\n      (h3 \"Loading...\"))))\n\n(defonce APP (app/fulcro-app))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n\n(comment\n\n  (comp/get-query PersonList)\n  (comp/get-initial-state Sample)\n  (reset! (::app/state-atom APP) {})\n\n  (app/current-state APP)\n\n  (app/schedule-render! APP)\n\n\n  )\n\n\n"]}