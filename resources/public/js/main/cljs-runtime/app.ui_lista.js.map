{"version":3,"sources":["app/ui_lista.cljs"],"mappings":";;;;;;AAOA,AAAA,AAAOA,AAAcC,AAAKC,AAAQC;AAAlC,AACE,AAAA,AAACC,AAAeH,AAAM,AAAAI,AAAA,AAAA,AAAA,AAA4BH,AAAiBC;AAA7C,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;;AAEzB,AAAA,AAAOC,AAASN,AAAKC,AAAQM;AAA7B,AACE,AAAAC,AACE,AAAAE,AAAeH;AAAfI,AAAA,AAAA,AAA+B,AAACE,AAAQd,AAAaC,AAAKC;AAA1D,AAAA,AAAAS,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AADH,AAAA,AAAAJ,AAAAA,AAACC,AAAAA,AAAAA;;AAGH,AAAA,AAAA;AAAA,AAAAK,AAAA,AAAA,AAAA,AAAcd;AAAd,AAAA,AAAA,AAAA,AAAA,AAAA,AACuD,AAACoC,AAAeC;AADvE,AAAA,AAAAtB,AAAcf;AAAd,AAAA,AAAAgB,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAoDmB;AAApD,AAAAf,AAAAJ,AAAA,AAAiCgB;AAAjC,AAAAZ,AAAAJ,AAAA,AAAoCiB;AAApC,AAAAb,AAAAJ,AAAA,AAAyCkB;AAAzC,AAAA,AAAA,AAEoC,AAAA,AAAWC;AAF/C,AAAA,AAAAd;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AACuEgB;AADvE,AAAA,AAAcrC;AAAd,AAAA,AAAAuB,AAAA,AAAcvB;AAAd,AAAA,AAAAwB,AAAA,AAAAC,AAAAA,AAAAA,AAAczB,AAAAA;AAAdwB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAP,AAAA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAAN,AAAAC,AAAAK,AAAAA;AAAAA,AAAoDW;AAApD,AAAAf,AAAAI,AAAA,AAAiCQ;AAAjC,AAAAZ,AAAAI,AAAA,AAAoCS;AAApC,AAAAb,AAAAI,AAAA,AAAyCU;AAAzC,AAQE,AAAAI,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAIL,AACJ,AAAAM,AAAA,AAAA,AAAA,AAAA,AACA,AAAAD,AAAA,AAAA,AACE,AAAA,AAACG;AAADD;AAAA,AAAM,AAAAA,AAAClC,AAAQN,AAAKgC;;AAJxB,AAGE,AAC4BE,AAC5B,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAbJ,AAAA,AAAA,AAAAb,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAA,AAAAT,AAAAN,AAAA,AAAOiB;;;AAAP,AAAAD,AAAA,AAAAhB,AAAOiB;AAiBP,AAAKW,AAAS,AAAA,AAAA,AAAA,AAACC,AAAaZ","names":["app.ui-lista/delete-todo!","this","list-id","todo-id","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","G__50310","app.mutations/todo-delete","app.ui-lista/ui-todo","todo","G__50311","app.ui-todo/ui-todo","G__50312","G__50313","com.fulcrologic.fulcro.components/computed","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","options__46503__auto__","p__50315","map__50316","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__50318","com.fulcrologic.fulcro.components/props","js/app","js/app.ui-lista","js/app.ui-lista.Lista","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.ui-lista/Lista","id","name","todos","props","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","app.ui-todo/Todo","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.dom/macro-create-element*","p1__50314#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","app.ui-lista/ui-lista","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns app.ui-lista\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [app.mutations :as api]\n    [app.ui-todo :as ui-todo-component]))\n\n(defn- delete-todo! [this list-id todo-id]\n  (comp/transact! this [(api/todo-delete {:lista/id list-id :todo/id todo-id})]))\n\n(defn- ui-todo [this list-id todo]\n  (ui-todo-component/ui-todo\n    (comp/computed todo {:onDelete (partial delete-todo! this list-id)})))\n\n(defsc Lista [this {:lista/keys [id name todos] :as props}]\n  {:query         [:lista/id :lista/name {:lista/todos (comp/get-query ui-todo-component/Todo)}]\n   :ident         (fn [] [:lista/id (:lista/id props)])\n   :initial-state {:lista/id    :param/id\n                   :lista/name  :param/name\n                   :lista/todos [{:id 1}\n                                 {:id 2}\n                                 {:id 3}]}}\n  (div :.ui.segment\n    (h2 name \"'s Todos\")\n    (h2 \"Todos:\")\n    (ul\n      (map #(ui-todo this id %) todos))\n    (button :.ui.button {} \"Add item\")\n    )\n  )\n\n(def ui-lista (comp/factory Lista {:keyfn :lista/id}))\n"]}