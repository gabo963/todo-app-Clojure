<<<<<<< HEAD
{"version":3,"sources":["app/model/list.cljs"],"mappings":"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","names":["app.model.list/select-list","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__52235","cljs.core/--destructure-map","cljs.core.get","p__52236","map__52237","*after-render*-orig-val__52238","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__52239","env","*after-render*-orig-val__52240","*after-render*-temp-val__52241","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","id","state","cljs.core.swap_BANG_","cljs.core/assoc-in","app.model.list/todo-add","map__52242","p__52243","map__52244","*after-render*-orig-val__52245","*after-render*-temp-val__52246","*after-render*-orig-val__52247","*after-render*-temp-val__52248","list-id","new-todo-id","cljs.core.get_in","s__51121__auto__","cljs.core.update_in","cljs.core/conj","app.model.list/todo-delete","map__52249","p__52250","map__52251","*after-render*-orig-val__52252","*after-render*-temp-val__52253","*after-render*-orig-val__52254","*after-render*-temp-val__52255","todo-id","com.fulcrologic.fulcro.algorithms.merge/remove-ident*","com.fulcrologic.fulcro.algorithms.normalized-state/dissoc-in"],"sourcesContent":["(ns app.model.list\n  (:require\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.normalized-state :as fns]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]))\n\n(defmutation select-list [{:list/keys [id]}]\n  (action [{:keys [state]}]\n    (swap! state assoc-in [:component/id :app.components.ui-lists-selection/list-picker :list-picker/selected-list] [:list/id id]))\n  (remote [env] true))\n\n(defmutation todo-add [{list-id :list/id}]\n  (ok-action [{:keys [state] :as env}]\n    (let [new-todo-id (-> env :result :body (get-in [`todo-add :todo/id]))]\n      (fns/swap!-> state\n        (update-in [:list/id list-id :list/todos] conj [:todo/id new-todo-id])\n        (assoc-in [:todo/id new-todo-id] {:todo/id new-todo-id :todo/text \"\" :todo/done false}))\n      ))\n  (remote [env] true))\n\n(defmutation todo-delete [{list-id :list/id todo-id :todo/id}]\n  (action [{:keys [state]}]\n    (fns/swap!-> state\n      (merge/remove-ident* [:todo/id todo-id] [:list/id list-id :list/todos])\n      (fns/dissoc-in [:todo/id todo-id])))\n  (remote [env] true))\n"]}
=======
{"version":3,"sources":["app/model/list.cljs"],"mappings":";AAOA,AAAA;;;AAAAA,0BAAA,AAAAC,+CAAA,AAAA;;AAAA,AAAAC,oFAAA,AAAA,2FAAA,WAAAC;AAAA,AAAA,IAAAC,aAAA,AAAA,sFAAA,AAAA,iFAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAAwBc;AAAxB,AAAA,kDAAA,0DAAA,gCAOWN;AAPX,AAAA;GAAA,+DAAA,mCAAAL;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAH,4BAAAG;UAAAA,NACiCI;YADjC,AAAAN,4CAAAE,eAAA,nEACsBW;AADtB,AAAA,IAAAV,iDAAAC;IAAAC,iDAAA;AAAA,AAAA,CAAAD,iEAAAC;;AAAA,IAAA,AAEI,IAAMS,8OAAgBR,1NAAkB,+CAAA,AAAA,oFAAA,AAAA,6FAAA,mFAAA,AAAA,2FAAA,9YAACS;AAAzC,AACE,AAAAC,yDAAA,WAAAC,jBAAaJ;AAAb,0BACE,kDAAAI,iBAAA,mFAAA,iEAAA,oFAAA,mFAAA,9XAACC,+MAAoBN,6EAAqBO,2JAAeL,jdACzD,4eAAA,mFAAA,mFAAA,2CAAA,2EAAA,6DAAA,GAAA,4DAAA,73BAACM,inBAAmBN,8HAAuBA;;UALnD,AAAA,CAAAV,iEAAAD;;AAAA;GAAA,wEAAA,WAAAG;AAAA,AAAA,IAAAC,2CAAAH;IAAAI,2CAAA;AAAA,AAAA,CAAAJ,iEAAAI;;AAAA,IAAA,AAAA,IAAAC,qBAAA,AAAAC,uDAAA,AAAA,iFAAAJ,KAAA;AAAA,AAAA,oBAAAG;AAAA,AAAA,IAAAE,iBAAAF;AAAA,AAAA,QAAAE,+CAAAA,6CAAAL,OAAAK,yBAAAL;;AAAA;;UAAA,AAAA,CAAAF,iEAAAG;;;AASA,AAAA;;;AAAAc,6BAAA,AAAA1B,+CAAA,AAAA;;AAAA,AAAAC,oFAAA,AAAA,kGAAA,WAAAC;AAAA,AAAA,IAAAyB,aAAA,AAAA,sFAAA,AAAA,iFAAAzB;IAAAyB,iBAAA,AAAAvB,4BAAAuB;cAAA,AAAAtB,4CAAAsB,eAAA,rEAA2BV;cAA3B,AAAAZ,4CAAAsB,eAAA,rEAA4CO;AAA5C,AAAA,kDAAA,0DAAA,gCAKWvB;AALX,AAAA;GAAA,yDAAA,gCAAAiB;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAzB,4BAAAyB;YAAA,AAAAxB,4CAAAwB,eAAA,nEACmBX;AADnB,AAAA,IAAAY,iDAAArB;IAAAsB,iDAAA;AAAA,AAAA,CAAAtB,iEAAAsB;;AAAA,IAAA,AAEI,AAAAV,yDAAA,WAAAC,jBAAaJ;AAAb,oEACE,2DAAAI,iBAAA,mFAAA,yEAAA,mFAAA,iEAAA,5XAACa,wNAA8BD,4JAAmBjB,xbAClD,sgBAAA,mFAAA,llBAACmB,2oBAAwBF;;UAJ/B,AAAA,CAAAzB,iEAAAqB;;AAAA;GAAA,wEAAA,WAAAnB;AAAA,AAAA,IAAAqB,2CAAAvB;IAAAwB,2CAAA;AAAA,AAAA,CAAAxB,iEAAAwB;;AAAA,IAAA,AAAA,IAAAnB,qBAAA,AAAAC,uDAAA,AAAA,iFAAAJ,KAAA;AAAA,AAAA,oBAAAG;AAAA,AAAA,IAAAE,iBAAAF;AAAA,AAAA,QAAAE,+CAAAA,6CAAAL,OAAAK,yBAAAL;;AAAA;;UAAA,AAAA,CAAAF,iEAAAuB","names":["app.model.list/todo-add","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__59135","cljs.core/--destructure-map","cljs.core.get","p__59136","map__59137","*after-render*-orig-val__59138","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__59139","env","*after-render*-orig-val__59140","*after-render*-temp-val__59141","temp__5804__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","list-id","state","new-todo-id","cljs.core.get_in","cljs.core.swap_BANG_","s__56758__auto__","cljs.core.update_in","cljs.core/conj","cljs.core/assoc-in","app.model.list/todo-delete","map__59142","p__59143","map__59144","*after-render*-orig-val__59145","*after-render*-temp-val__59146","*after-render*-orig-val__59147","*after-render*-temp-val__59148","todo-id","com.fulcrologic.fulcro.algorithms.merge/remove-ident*","com.fulcrologic.fulcro.algorithms.normalized-state/dissoc-in"],"sourcesContent":["(ns app.model.list\n  (:require\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.normalized-state :as fns]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]))\n\n\n(defmutation todo-add [{list-id :list/id}]\n  (ok-action [{:keys [state] :as env}]\n    (let [new-todo-id (-> env :result :body (get-in [`todo-add :todo/id]))]\n      (fns/swap!-> state\n        (update-in [:list/id list-id :list/todos] conj [:todo/id new-todo-id])\n        (assoc-in [:todo/id new-todo-id] {:todo/id new-todo-id :todo/text \"\" :todo/done false} ))\n      ))\n  (remote [env] true))\n\n(defmutation todo-delete [{list-id :list/id todo-id :todo/id}]\n  (action [{:keys [state]}]\n    (fns/swap!-> state\n      (merge/remove-ident* [:todo/id todo-id] [:list/id list-id :list/todos])\n      (fns/dissoc-in [:todo/id todo-id])))\n  (remote [env] true))\n"]}
>>>>>>> main
