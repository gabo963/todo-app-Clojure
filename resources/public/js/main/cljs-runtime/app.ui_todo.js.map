{"version":3,"sources":["app/ui_todo.cljs"],"mappings":"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","names":["app.ui-todo/ui-todo-checkbox","this","id","done","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","G__50222","app.mutations/todo-change-done","cljs.core/not","com.fulcrologic.fulcro.dom/macro-create-element*","app.ui-todo/ui-todo-input","text","p1__50223#","G__50224","app.mutations/todo-change-text","com.fulcrologic.fulcro.dom.events/target-value","app.ui-todo/ui-todo-delete-button","onDelete","options__46503__auto__","p__50225","map__50226","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__50228","com.fulcrologic.fulcro.components/props","map__50229","com.fulcrologic.fulcro.components/get-computed","js/app","js/app.ui-todo","js/app.ui-todo.Todo","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.ui-todo/Todo","props","app.ui-todo/ui-todo","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns app.ui-todo\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button input label i s]]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    [app.mutations :as api]))\n\n(defn- ui-todo-checkbox [this id done]\n  (div\n    (input {:type     \"checkbox\" :name id :checked done\n            :onChange #(comp/transact! this\n                         [(api/todo-change-done {:todo/id id :todo/done (not done)})])}\n      )\n    (label \"\")))\n\n(defn- ui-todo-input [this id text done]\n  (if done\n    (div :.ui.disabled.input\n      (input :.w-full {:type \"text\" :value text :style {:text-decoration \"line-through\"}}))\n    (div :.ui.input\n      (input :.w-full {:type     \"text\" :value text :placeholder \"Write Something\"\n                       :onChange #(comp/transact! this\n                                    [(api/todo-change-text {:todo/id id :todo/text (evt/target-value %)})])}))))\n(defn- ui-todo-delete-button [onDelete id]\n  (div :.fluid\n    (button :.ui.icon.button {\n                              :onClick #(onDelete id)} \"\"\n      (i :.x.icon))))\n\n(defsc Todo [this {:todo/keys [id done text] :as props} {:keys [onDelete]}]\n  {:query         [:todo/id :todo/done :todo/text]\n   :ident         (fn [] [:todo/id (:todo/id props)])\n   :initial-state {:todo/id   :param/id\n                   :todo/done false\n                   :todo/text \"\"}}\n  (div :.ui.grid\n    (div :.column\n      (ui-todo-checkbox this id done))\n    (div :.ten.wide.column\n      (ui-todo-input this id text done))\n    (div :.two.wide.column\n      (ui-todo-delete-button onDelete id))\n    ))\n\n(def ui-todo (comp/factory Todo {:keyfn :todo/id}))\n"]}